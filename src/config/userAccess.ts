import { EmploymentItem } from "../actions";

export interface UserAccessInterface {
  key: any;
  permissions: {
    view: boolean;
    create: boolean;
    updated: boolean;
    delete: boolean;
    export: boolean;
  };
}
export enum UserAccessList {
  COMPETENCY_SETTINGS = "COMPETENCY_SETTINGS",
  COMPETENCY_FUNCTION_SETTINGS = "COMPETENCY_FUNCTION_SETTINGS",
  COMPETENCY_CATEGORY_SETTINGS = "COMPETENCY_CATEGORY_SETTINGS",
  COMPETENCY_DOMAIN_SETTINGS = "COMPETENCY_DOMAIN_SETTINGS",
  COMPETENCY_BEHAVIOR_SETTINGS = "COMPETENCY_BEHAVIOR_SETTINGS",
  JOB_FAMILIES = "JOB_FAMILIES",
  QUALIFICATION_SETTINGS = "QUALIFICATION_SETTINGS",
  PROFICIENCY_LEVELS_SETTINGS = "PROFICIENCY_LEVELS_SETTINGS",
  TRAINING_PROVIDERS_SETTINGS = "TRAINING_PROVIDERS_SETTINGS",
  POSITIONS = "POSITIONS",
  POSITION_COMPETENCY = "POSITION_COMPETENCY",
  POSITION_ACCESS = "POSITION_ACCESS",
  STAFFING_LEVEL = "STAFFING_LEVEL",
  EMPLOYEES_LIST = "EMPLOYEES_LIST",
  EMPLOYEE_PERSONAL_INFO = "EMPLOYEE_PERSONAL_INFO",
  EMPLOYEE_POSITION_DETAILS = "EMPLOYEE_POSITION_DETAILS",
  EMPLOYEE_BEHAVIORS = "EMPLOYEE_BEHAVIORS",
  EMPLOYEE_POSITION_COMPETENCIES = "EMPLOYEE_POSITION_COMPETENCIES",
  EMPLOYEE_TRAINING = "EMPLOYEE_TRAINING",
  EMPLOYEE_LEAVE = "EMPLOYEE_LEAVE",
  EMPLOYEE_TRAVEL = "EMPLOYEE_TRAVEL",
  COMPETENCY_MANAGEMENT = "COMPETENCY_MANAGEMENT",
  COMPETENCY_EVALUATION = "COMPETENCY_EVALUATION",
  EMPLOYEES_TRAINING_PLANS = "EMPLOYEES_TRAINING_PLANS",
  TRAINING_PARTICIPANTS = "TRAINING_PARTICIPANTS",
  APPROVE_EMPLOYEE_ATTENDED_TRAINING = "APPROVE_EMPLOYEE_ATTENDED_TRAINING",
  TRAINING_PLANS = "TRAINING_PLANS",
  TRAININGS = "TRAININGS",
  REPORT_ATTENDED_TRAINING = "REPORT_ATTENDED_TRAINING",
  LEAVE_REQUEST_APPROVAL = "LEAVE_REQUEST_APPROVAL",
  LEAVE_RETURN_APPROVAL = "LEAVE_RETURN_APPROVAL",
  LEAVES = "LEAVES",
  REQUEST_FOR_LEAVE = "REQUEST_FOR_LEAVE",
  REPORT_LEAVE_RETURN = "REPORT_LEAVE_RETURN",
  TRAVEL_REQUEST_APPROVAL = "TRAVEL_REQUEST_APPROVAL",
  TRAVEL_RETURN_APPROVAL = "TRAVEL_RETURN_APPROVAL",
  TRAVELS = "TRAVELS",
  REQUEST_FOR_TRAVEL = "REQUEST_FOR_TRAVEL",
  REPORT_TRAVEL_RETURN = "REPORT_TRAVEL_RETURN",
}

export const isAccessAuthorized = (
  selectedEmployment: EmploymentItem | null,
  access: UserAccessList
): {
  create: boolean;
  update: boolean;
  delete: boolean;
  view: boolean;
  export: boolean;
} => {
  if (selectedEmployment !== null) {
    const response = selectedEmployment.access.find(
      (itm) => itm.key === access
    );
    if (response !== undefined) {
      return response.permission;
    }
  }
  return {
    create: false,
    update: false,
    delete: false,
    view: false,
    export: false,
  };
};
